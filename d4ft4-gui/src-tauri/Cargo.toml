[package]
name = "d4ft4-gui"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
license = ""
repository = ""
#default-run = "d4ft4"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
name = "app_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

[build-dependencies]
tauri-build = { version = "2.0.0-alpha.8", features = [] }

[dependencies]
d4ft4 = { path = "../../d4ft4" }
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "2.0.0-alpha.14", features = ["rustls-tls", "config-json5"] }
tauri-plugin-dialog = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v2" }
tauri-plugin-fs = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v2" }
tauri-plugin-os = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v2" }
tokio = { version = "1.31", features = ["full", "tracing"] }
# tokio-stream = "0.1"
futures = "0.3"
# async_fn_traits = "0.1.1"
wry = { version = "0.33", default-features = false }
#console-subscriber = "0.1.10"

[target.'cfg(android)'.dependencies]
jni = "0.21.1"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]

